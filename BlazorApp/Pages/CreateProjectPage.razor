@page "/createProject"
@inject IProjectRemote ProjectRemote
@using BlazorApp.Core
@inject NavigationManager navManager
@using static CurrieTechnologies.Razor.SweetAlert2.SweetAlertIcon
@inject CurrieTechnologies.Razor.SweetAlert2.SweetAlertService swal

<h1>Create new project </h1>
<br> <br />

<form class="MainDiv">
    <div class="form-group">
        <input @bind="Title" @bind:event="oninput" type="text" class="form-control" id="formGroupExampleInput"
            placeholder="Project Title">
    </div>
    <div class="form-group">
        <textarea @bind="Description" @bind:event="oninput" type="text" style="height: 200px;" class="form-control"
            id="formGroupExampleInput2" placeholder="Project Description" rows="20"></textarea>
    </div>
    <div class="form-group">
        <textarea type="text" style="height: 120px;" class="form-control" id="formGroupExampleInput2"
            placeholder="Additional information" rows="10"></textarea>
    </div>
</form>

<div class="allTags">
    <div class="preDefinedTags">
        <button type="button" class="btn btn-info">SWU</button>
        <button type="button" class="btn btn-info">Data Science</button>
        <button type="button" class="btn btn-info">DDIT</button>
        <button type="button" class="btn btn-info">GBI</button>
    </div>
</div>

<br> <br />

<div class="Buttons">
    <button type="button" class="btn btn-success successBtn"
        @onclick="@(e => Submit(Title, Description))">Submit</button>
    <button type="button" class="btn btn-success uploadBtn">Upload File</button>

</div>


@code
{

    private string Title;
    private string Description;

    private async void Submit(string Title, string Description)
    {
        ProjectCreateDTO projectCreateDTO = new ProjectCreateDTO()
        {
            Title = Title,
            Description = Description
        };

        var result = await ProjectRemote.CreateProject(projectCreateDTO);

        if (result)
        {
            await swal.FireAsync("Succes", "Project successfully created", Success);
            navManager.NavigateTo("/");
        }

        else
        {
            await swal.FireAsync("Error", "Couldn't create project", Error);
        }

    }


}
