@page "/ProjectDetails"
@layout MainLayout

@using Core

@inject ProjectRemote ProjectRemote
@inject TagRemote TagRemote;

<div class="page">

    <div class="left-side-container">
        <section class="title-section">
            <h1>Project Title</h1>
        </section>

        <section class="description-section">
           <p>This is a long description</p> 

        </section>

        <section class="apply-section edit-section">

            <AuthorizeView Roles="Student">
                <button class="btn btn-success successBtn apply-button">Apply</button>
            </AuthorizeView>

            <AuthorizeView Roles="Supervisor">
                <button class="btn btn-success successBtn edit-button">Edit</button>
            </AuthorizeView>
            
        </section>

    </div>

    <div class="right-side-container">
        <h3>@supervisor.Name</h3>
        <h6>Supervisor E-mail</h6>
        <p class="Large">Tags</p>
        <div class="TagsBox">
            <ul>
            <li>Coffee</li>
            <li>Tea</li>
            <li>Milk</li>
            </ul>
        </div>
    </div>

</div>


@code
{
    private IEnumerable<TagDetailsDTO> tags = new List<TagDetailsDTO>();    
    private IEnumerable<ProjectDetailsDTO> projects = new List<ProjectDetailsDTO>();
    private int projectId;
    
    SupervisorDTO supervisor = new SupervisorDTO("1", "Shuuuuuuja Larsen Andreas");

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        tags = await TagRemote.GetTags();

        projects = await ProjectRemote.GetProjects();
    }
}